# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface AbstractEntity {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  firstname: String!
  lastname: String!
  avatar: String
}

type Article {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String!
  image: String!
  author: User
}

type ArticleDeleteOutput {
  articleId: ID!
}

type ArticleCreateOutput {
  article: Article!
}

type ArticleUpdateOutput {
  article: Article!
}

type ArticlesPaginator {
  total: Float!
  results: [Article!]!
}

type UserCreateOutput {
  user: User!
}

type AuthLoginOutput {
  accessToken: String!
}

type Query {
  articles(skip: Int!, take: Int!, sortBy: ArticlesPaginatorSortBy): ArticlesPaginator!
}

input ArticlesPaginatorSortBy {
  createdAt: SortBy
  title: SortBy
}

enum SortBy {
  ASC
  DESC
}

type Mutation {
  articleCreate(input: ArticleCreateInput!): ArticleCreateOutput!
  articleUpdate(articleId: ID!, input: ArticleUpdateInput!): ArticleUpdateOutput!
  articleDelete(articleId: ID!): ArticleDeleteOutput!
  userCreate(input: UserCreateInput!): UserCreateOutput!
  login(username: String!, password: String!): AuthLoginOutput!
}

input ArticleCreateInput {
  title: String!
  description: String!
  image: String!
}

input ArticleUpdateInput {
  title: String!
  description: String!
  image: String!
}

input UserCreateInput {
  email: String!
  password: String!
  firstname: String!
  lastname: String!
  avatar: String
}